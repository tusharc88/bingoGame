<testsuites name="jest tests" tests="37" failures="0" time="8.331999999999999">
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:03" time="0.562" tests="1">
    <testcase classname=" Renders with default props" name=" Renders with default props" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:03" time="0.63" tests="2">
    <testcase classname=" Renders with default props" name=" Renders with default props" time="0.043">
    </testcase>
    <testcase classname=" Renders with hasBorder prop" name=" Renders with hasBorder prop" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:03" time="0.587" tests="5">
    <testcase classname=" Renders with default props" name=" Renders with default props" time="0.012">
    </testcase>
    <testcase classname=" handleDisabled should return false when currentNumber is 1 and Cell number is 1" name=" handleDisabled should return false when currentNumber is 1 and Cell number is 1" time="0.002">
    </testcase>
    <testcase classname=" handleDisabled should return true when currentNumber is 2 and Cell number is 1" name=" handleDisabled should return true when currentNumber is 2 and Cell number is 1" time="0.001">
    </testcase>
    <testcase classname=" handleClick should toggle background color on clicking non disabled cell" name=" handleClick should toggle background color on clicking non disabled cell" time="0.023">
    </testcase>
    <testcase classname=" handleClick should not toggle background color on clicking disabled cell" name=" handleClick should not toggle background color on clicking disabled cell" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:03" time="0.645" tests="1">
    <testcase classname=" Renders with default props" name=" Renders with default props" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:03" time="0.637" tests="1">
    <testcase classname=" Renders with default props" name=" Renders with default props" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:03" time="0.717" tests="1">
    <testcase classname=" Renders with default props" name=" Renders with default props" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:03" time="0.785" tests="1">
    <testcase classname=" Renders with default props" name=" Renders with default props" time="0.183">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:04" time="0.24" tests="2">
    <testcase classname=" selectBingoCards" name=" selectBingoCards" time="0.012">
    </testcase>
    <testcase classname=" selectBingoCard" name=" selectBingoCard" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:04" time="0.251" tests="2">
    <testcase classname=" initialState" name=" initialState" time="0.002">
    </testcase>
    <testcase classname=" get unique random numbers" name=" get unique random numbers" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:04" time="0.284" tests="2">
    <testcase classname=" populateBingoCards" name=" populateBingoCards" time="0.008">
    </testcase>
    <testcase classname=" watchPopulateCards" name=" watchPopulateCards" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:04" time="0.286" tests="2">
    <testcase classname=" checkIsBingo" name=" checkIsBingo" time="0.008">
    </testcase>
    <testcase classname=" watchCheckBingo" name=" watchCheckBingo" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:04" time="0.257" tests="1">
    <testcase classname=" selectPastNumbers" name=" selectPastNumbers" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:04" time="0.285" tests="1">
    <testcase classname=" getNextNumber" name=" getNextNumber" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:04" time="0.378" tests="2">
    <testcase classname=" Renders with default props" name=" Renders with default props" time="0.039">
    </testcase>
    <testcase classname=" Renders with onClick prop" name=" Renders with onClick prop" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:05" time="0.233" tests="2">
    <testcase classname=" initialState" name=" initialState" time="0.002">
    </testcase>
    <testcase classname=" isBingo true" name=" isBingo true" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:05" time="0.252" tests="2">
    <testcase classname=" initialState" name=" initialState" time="0.002">
    </testcase>
    <testcase classname=" populated state" name=" populated state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:05" time="0.256" tests="2">
    <testcase classname=" selectIsBingo when true" name=" selectIsBingo when true" time="0.002">
    </testcase>
    <testcase classname=" selectIsBingo when false" name=" selectIsBingo when false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:05" time="0.279" tests="2">
    <testcase classname=" getNextNumber" name=" getNextNumber" time="0.004">
    </testcase>
    <testcase classname=" watchGetNextNumber" name=" watchGetNextNumber" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:05" time="0.262" tests="1">
    <testcase classname=" isBingo" name=" isBingo" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:05" time="0.261" tests="3">
    <testcase classname=" generateBingoCardNumbers" name=" generateBingoCardNumbers" time="0.002">
    </testcase>
    <testcase classname=" generateUniqueRandomNumber" name=" generateUniqueRandomNumber" time="0.001">
    </testcase>
    <testcase classname=" isBingo" name=" isBingo" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2018-05-11T04:30:05" time="0.245" tests="1">
    <testcase classname=" populateCards" name=" populateCards" time="0.004">
    </testcase>
  </testsuite>
</testsuites>